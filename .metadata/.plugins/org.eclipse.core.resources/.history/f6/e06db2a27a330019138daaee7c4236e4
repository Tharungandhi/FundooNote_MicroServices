package com.bridgelabz.fundoonotes.service;

import java.util.Optional;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.bridgelabz.fundoonotes.dao.NoteDetailsRepository;
import com.bridgelabz.fundoonotes.model.Note;
import com.bridgelabz.fundoonotes.util.GenerateTokenImpl;

@Service
public class NoteServiceImpl implements NoteService {

	
	@Autowired
	GenerateTokenImpl generateToken;
	
	@Autowired
	NoteDetailsRepository noteDetailsRepository;
	
	public Note createNote(String token,Note note, HttpServletRequest request) {
		int id = generateToken.verifyToken(token);
		note.setUserId(id);
		noteDetailsRepository.save(note);	
		return note;
	}

	@Override
	public Note updateNote(int id, String token, Note note, HttpServletRequest request) {
		int userid = generateToken.verifyToken(token);
		Optional<Note> optional = noteDetailsRepository.findById(id);
		if(optional.isPresent())
		{
			Note updatedNote=optional.get();
			if(updatedNote.getUserId()==userid) {
			updatedNote.setTitle(note.getTitle());
			updatedNote.setDiscription(note.getDiscription());
			noteDetailsRepository.save(updatedNote);	
			return updatedNote;
		}}
		return null;
	}
	
	public Note deleteNote(int id,String token,HttpServletRequest request) {
		int userId = generateToken.verifyToken(token);
		Optional<Note> optional = noteDetailsRepository.findById(id);
		if(optional.isPresent()) {
			Note updatedNote=optional.get();
			if(updatedNote.getUserId()==userId) {
				noteDetailsRepository.delete(updatedNote);
		return updatedNote;
	}}
		return null;}
	
	

		

	
	
}


