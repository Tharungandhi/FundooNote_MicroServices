package com.bridgelabz.fundoonotes.controller;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import com.bridgelabz.fundoonotes.dao.NoteDetailsRepository;
import com.bridgelabz.fundoonotes.model.Note;
import com.bridgelabz.fundoonotes.service.NoteService;

@Controller
@RequestMapping("/note ")
public class NoteController {

	
	@Autowired
	private NoteService noteService;
	
	@PostMapping(value = "/createnote")
	public ResponseEntity<String> createNote( @RequestHeader("token") String token,@RequestBody Note note, HttpServletRequest request) {
			
		Note newNote=noteService.createNote(token, note, request);
				if (newNote!=null) {
					return new ResponseEntity<String>("Note Succesfully Created",HttpStatus.OK);
			} else {
				
				return new ResponseEntity<String>("Denied In Creation of Note",HttpStatus.CONFLICT);
			}
}
	@PostMapping(value = "/updatenote")
    public ResponseEntity<String> updateNote(@RequestParam("id") int id, @RequestHeader("token") String token,@RequestBody Note user, HttpServletRequest request)
    {
        try {
            if (noteService.updateNote(id,token,user, request)!=null)
                return new ResponseEntity<String>("Note Succesfully updated",HttpStatus.OK);
        } catch (Exception e) {
            e.printStackTrace();
            return new ResponseEntity<String>("Note not Found by given  Id",HttpStatus.CONFLICT);
        }
        return new ResponseEntity<String>("Pls provide details correctly",HttpStatus.CONFLICT);
    }
	
}
